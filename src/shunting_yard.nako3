!『utils.nako3』を取り込む

関数（式の）シュンティングヤードとは
    トークンリストは式のutils__トークン化。
    スタックは[]。
    アウトプットは[]。
    
    優先順位は｛
        "+": 1,
        "-": 1,
        "*": 2, 
        "/": 2,
    ｝

    トークンリストを反復して
        もし、（FLOAT(対象)がNAN判定）でなければ、
            対象をアウトプットに配列追加。
        違えば、もし、対象が「(」ならば、
            対象をスタックに配列追加。
        違えば、もし、対象が「)」ならば、
            はいの間  
                リスト長さはスタックの要素数。
                もし、リスト長が0ならば抜ける。

                尻尾はスタックの配列ポップ。
                もし、尻尾が「(」ならば抜ける。

                アウトプットに尻尾を配列追加。
            ここまで。
        違えば
            はいの間  
                リスト長さはスタックの要素数。
                もし、リスト長が0ならば抜ける。

                尻尾はスタックのutils__ピック。
                もし、（優先順位[尻尾]）かつ（優先順位[尻尾]が優先順位[対象]以上）ならば
                    スタックの配列ポップ。
                    アウトプットに尻尾を配列追加。
                違えば
                    抜ける。
                ここまで。
            ここまで。

            スタックに対象を配列追加。
        ここまで。
    ここまで。
 
   （スタックの要素数）の間
        尻尾はスタックの配列ポップ。
        アウトプットに尻尾を配列追加。
    ここまで。
    
    アウトプットを" "で配列結合して戻す
ここまで。